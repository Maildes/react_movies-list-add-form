{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","newMovie","NewMovie","addMovie","useState","setMovie","infoHeadlines","Object","keys","handleChange","e","target","name","value","onSubmit","preventDefault","heading","type","placeholder","onChange","required","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"wwEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,kBCtBJK,G,MAAW,CACff,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,KAGGE,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACdC,mBAASH,GADK,mBACjCH,EADiC,KAC1BO,EAD0B,KAGlCC,EAAgBC,OAAOC,KAAKP,GAS5BQ,EAAe,SAACC,GAAO,IAAD,EACFA,EAAEC,OAAlBC,EADkB,EAClBA,KAAMC,EADY,EACZA,MAEdR,EAAS,2BACJP,GADG,kBAELc,EAAOC,MAIZ,OACE,0BAAMC,SAjBa,SAACJ,GACpBA,EAAEK,iBAEFZ,EAASL,GACTO,EAASJ,IAaqBX,UAAU,QACrCgB,EAAcT,KAAI,SAAAmB,GAAO,OACxB,oCACE,2BACEC,KAAK,OACL3B,UAAU,cACVS,IAAKiB,EACLJ,KAAMI,EACNH,MAAOf,EAAMkB,GACbE,YAAaF,EACbG,SAAUV,EACVW,SAAsB,gBAAZJ,QAKhB,4BACEC,KAAK,SACL3B,UAAU,kBAFZ,mB,OC5CO+B,EAAM,WAAO,IAAD,EACKjB,mBAASkB,GADd,mBAChB1B,EADgB,KACR2B,EADQ,KAOvB,OACE,yBAAKjC,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUa,SAVC,SAACL,GAChByB,EAAU,GAAD,mBAAK3B,GAAL,CAAaE,WCL1B0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.18a0c9c4.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      imgUrl: PropTypes.string.isRequired,\r\n      imdbUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nconst newMovie = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport const NewMovie = ({ addMovie }) => {\n  const [movie, setMovie] = useState(newMovie);\n\n  const infoHeadlines = Object.keys(newMovie);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    addMovie(movie);\n    setMovie(newMovie);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setMovie({\n      ...movie,\n      [name]: value,\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      {infoHeadlines.map(heading => (\n        <>\n          <input\n            type=\"text\"\n            className=\"form__input\"\n            key={heading}\n            name={heading}\n            value={movie[heading]}\n            placeholder={heading}\n            onChange={handleChange}\n            required={heading !== 'description'}\n          />\n        </>\n      ))\n      }\n      <button\n        type=\"submit\"\n        className=\"button__submit\"\n      >\n        Add New Movie\n      </button>\n    </form>\n  );\n};\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer)\n\n  const addMovie = (movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie addMovie={addMovie}/>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}